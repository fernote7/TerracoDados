install.packages("tm")
install.packages("IMFdata")
shiny::runApp('C:/Users/talitha.speranza/Dropbox/Terraço/Apps/GDP2')
setwd("C:\\Users\\talitha.speranza\\Dropbox\\Terraço\\Apps\\GDP3")
shiny::runApp()
runApp()
runApp()
runApp()
?closeAlert
createAlert()
?createAlert
runApp()
da = wb(country = "BRA", indicator = "NE.CON.GOVT.KD", mrv = 1)
da
class(da)
nrow(da)
da = wb(country = "BRA", indicator = "NE.CON.GOVT.KD", mrv = 100)
da
class(da)
source('C:/Users/talitha.speranza/Dropbox/Terraço/Apps/GDP3/wb.R', encoding = 'UTF-8')
runApp()
runApp()
runApp()
options(browser = "C:/Program Files/Google/Chrome/Application/chrome.exe")
shiny::runApp()
runApp(launch.browser = T)
options(browser = "C:/Program Files (x86)/Google/Chrome/Application/chrome.exe")
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp()
runApp(launch.browser = T)
runApp(launch.browser = T)
source('C:/Users/Talitha/Dropbox/Terraço/Apps/GDP3/wb.R', encoding = 'UTF-8')
library(wbstats)
wb(country = "BRA", indicator = "NY.GDP.MKTP.KD.ZG", start = 2000, end = 2016)
runApp()
runApp(launch.browser = T)
runApp()
runApp()
runApp()
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp()
runApp(launch.browser = T)
a = get.wb.series(country = "BRA", type = "MKTP", meas = "CD", start = 2008, end = 2016)
a
a = get.wb.series(country = "BRA", type = "MKTP", meas = "CD", start = "2008-01-01", end = " 2016-01-01")
a
a = get.wb.series(country = "BRA", type = "MKTP", meas = "KD.ZG", start = "2008-01-01", end = " 2016-01-01")
a
b = get.wb.series(country = "BRA", type = "MKTP", meas = "CD", start = "2008-01-01", end = " 2016-01-01")
cbind(data.frame(as.Date.ts(b)),data.frame(b))
a
c = cbind(data.frame(as.Date.ts(b)),data.frame(b))
c
a
d <- data.frame(a)
d.t <- as.Date.ts(a)
d
c
d.t
l = get.oecd.series(country = "BRA", type = "MKTP", meas = "CD", start = "2008-01-01", end = " 2016-01-01")
l = get.oecd.series(country = "BRA", type = "", meas = "CXC", start = "2008-01-01", end = " 2016-01-01")
l = get.oecd.series(country = "BRA", type = "", freq = "A", meas = "CXC", start = "2008-01-01", end = " 2016-01-01")
l
l = get.oecd.series(country = "BRA", type = "", freq = "A", meas = "CXC", start = "2008-01-01", end = "2016-01-01")
l
s = get.oecd.series(country = "BRA", type = "", freq = "A", meas = "G", start = "2008-01-01", end = "2016-01-01")
d <- data.frame(l)
d.t <- as.Date.ts(l)
e <- data.frame(s)
e.t <- as.Date.ts(s)
d.t <- data.frame(as.Date.ts(l))
e.t <- data.frame(as.Date.ts(s))
e
e.t
c <- cbind(d.t, d)
c
c <- cbind(c,1)
c
c[d:,3] <-
ts(data.frame(s,l))
c[d:,3] <-
ts(list(s,l))
as.Date(ts)
c[d:,3] <-
t = ts(list(s,l))
t
as.Date(t)
ts(d,c)
cbind(l,s)
write.csv(cbind(l,s),"oi.csv")
as.Date.ts(cbind(l,s))
data.frame(cbind(l,s))
runApp(launch.browser = T)
runApp(launch.browser = T)
as.Date.ts(cbind(l,s))
runApp()
runApp(launch.browser = T)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp(launch.browser = T)
runApp()
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp()
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp()
runApp()
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp()
runApp()
runApp('teste.R')
runApp()
runApp('teste.R')
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp()
runApp(launch.browser = T)
runApp(launch.browser = T)
runApp()
runApp(launch.browser = T)
runApp()
runApp(launch.browser = T)
fs <- c("gdp_series.csv", "gdp_components.csv")
zip("gdp_data.zip", fs)
getwd()
zip(zipfile = "gdp_data.zip", fs)
?zip
zip(zipfile = "teste.zip", files = fs, flags = "-r9X", extras = "",
zip = Sys.getenv("R_ZIPCMD", "zip"))
fs <- c("gdp_series.csv", "gdp_components.csv")
fname = "teste.zip"
zip(zipfile=fname, files=fs)
zip(zipfile=fname, files=fs)
shiny::runApp()
shiny::runApp(launch.browser = T)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
print(series)
runApp()
runApp('C:/Users/Talitha/Dropbox/Terraço/Apps/GDP3')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
1 == NULL
runApp()
runApp()
identical(NULL,"")
identical(NULL,"ass")
identical("ass","ass")
runApp()
runApp()
runApp()
